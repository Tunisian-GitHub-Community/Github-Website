{"version":3,"file":"static/js/771.f48b8d8e.chunk.js","mappings":"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","sources":["app/components/RulesDropDown.tsx","app/components/HowToJoin.tsx","app/components/Members.tsx","app/pages/data/GuideLines.data.ts","app/hooks/organization/useFetchMembers.ts","app/pages/MembersPage.tsx"],"sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RulesDropDown = ({ title, subtitles }) => (\n  <details data-test=\"RulesDropDown\" className=\"w-5/12 m-4\">\n    <summary className=\"font-semibold  bg-gray-800 rounded-md py-2 px-4\">\n      {title}\n    </summary>\n    <span className=\"py-4\">\n      <ul>\n        {subtitles.map((subtitle, i) =>\n          subtitles.length > 1 ? (\n            <li key={i} className=\"py-2\">\n              {subtitle}\n            </li>\n          ) : (\n            <div className=\"py-4\">{subtitle} </div>\n          ),\n        )}\n      </ul>\n    </span>\n  </details>\n);\n\nRulesDropDown.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitles: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\nexport default RulesDropDown;\n","import React from 'react';\nimport RulesDropDown from '../components/RulesDropDown';\n\n/* the component to show instructions on how to join us,  This Component Exist in \"TeamPage\" Page. */\nfunction HowToJoin({ guideLines }) {\n  return (\n    <div>\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container  mx-auto\">\n          <div className=\"flex flex-col text-center w-full mb-10\">\n            <h1 className=\"text-xs text-indigo-500 tracking-widest font-medium title-font mb-1\">\n              Private Community\n            </h1>\n            <h1 className=\"sm:text-3xl text-2xlg font-medium title-font text-gray-300\">\n              Want to join us ?\n            </h1>\n            <h5> Register for the next challenge</h5>\n          </div>\n        </div>\n      </section>\n      <div>\n        <div>\n          <section className=\"text-gray-300\">\n            <div className=\"container mx-auto\">\n              <div className=\"text-center mb-10\">\n                <p className=\"text-base leading-relaxed text-gray-200 xl:w-2/4 lg:w-3/4 mx-auto\">\n                  In the interest of fostering an open and welcoming environment\n                  for our members, we pledge to make our community a\n                  harassment-free experience for everyone, regardless of age,\n                  disability, ethnicity, level of experience, personal\n                  appearance, religion.\n                </p>\n              </div>\n              <div className=\"flex flex-row mb-10\">\n                {guideLines.map((data, i) => (\n                  <RulesDropDown\n                    key={i}\n                    title={data.title}\n                    subtitles={data.subtitle}\n                  />\n                ))}\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HowToJoin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from './Spinner';\n\nexport const Members = ({ members, isLoading, error }) => {\n  if (error) console.log(error);\n  if (isLoading)\n    return (\n      <div className=\"m-32\">\n        <Spinner />\n      </div>\n    );\n  return (\n    <div className=\"team\">\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-24 mx-auto\">\n          <div className=\"flex flex-col text-center w-full mb-20\">\n            <h1 className=\"sm:text-3xl text-2xl font-medium title-font mb-4 text-white\">\n              A List Of Recent Contributors\n            </h1>\n            <p className=\"lg:w-2/3 mx-auto leading-relaxed text-white\">\n              if you dont see your name here please check your{' '}\n              <a\n                className=\"text-blue-600 outline-dotted\"\n                target=\"_blank\"\n                href=\"https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-user-account/managing-your-membership-in-organizations/publicizing-or-hiding-organization-membership\"\n                rel=\"noreferrer\"\n              >\n                org visibility\n              </a>\n            </p>\n          </div>\n          <div className=\"flex flex-wrap -m-2\">\n            {members.map((member, i) => (\n              <div\n                data-test=\"member\"\n                key={i}\n                className=\"p-2 lg:w-1/3 md:w-1/2 w-full\"\n              >\n                <div className=\"h-full flex items-center border-gray-800 border p-4 rounded-lg\">\n                  <img\n                    alt=\"team\"\n                    className=\"w-16 h-16 bg-gray-100 object-cover object-center flex-shrink-0 rounded-full mr-4\"\n                    src={member.node.user.avatarUrl}\n                  />\n                  <div className=\"flex-grow\">\n                    <h2 className=\"text-white title-font font-medium\">\n                      {member.node.user.name}\n                    </h2>\n                    <p className=\"text-gray-500\">\n                      {member.node.user.bio.length > 10\n                        ? member.node.user.bio.slice(0, 70) + '...'\n                        : ''}\n                    </p>\n                    <a\n                      className=\"text-indigo-600\"\n                      target=\"_blank\"\n                      href={member.node.user.url}\n                      rel=\"noreferrer\"\n                    >\n                      Github\n                    </a>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nMembers.propTypes = {\n  members: PropTypes.instanceOf(Array).isRequired,\n  isLoading: PropTypes.bool,\n};\n\nexport default React.memo(Members);\n","const guideLines = [\n  {\n    title: 'Our Standards',\n    subtitle: [\n      '- Being respectful of differing opinions and viewpoints.',\n      '- Using welcoming and inclusive language.',\n      '- Gracefully accepting constructive criticism.',\n      '- Focusing on what is best for the community.',\n    ],\n  },\n  {\n    title: 'Unacceptable behaviours',\n    subtitle: [\n      '- The use of sexualized language or imagery and unwelcome sexual attention or advances.',\n      '- Derogatory comments, and personal attacks.',\n      '- Other conduct which could reasonably be considered inappropriate in a professional setting.',\n    ],\n  },\n  {\n    title: 'Actions and Reports',\n    subtitle: [\n      \"Community leaders are responsible for clarifying the standards of acceptable behavior and take appropriate and fair corrective action in response to any instances of unacceptable behavior. If you feel overwhelmed by someone's action , we advise you to report it to the Community Moderators.\",\n    ],\n  },\n  {\n    title: 'Scope',\n    subtitle: [\n      ' The code of conduct applies in both online and offline interactions between members.',\n    ],\n  },\n];\n\nexport default guideLines;\n","import { useQuery } from 'react-query';\nimport { gql, GraphQLClient } from 'graphql-request';\n\nconst fetchMembers = async () => {\n  const endpoint = 'https://api.github.com/graphql';\n  const graphQLClient = new GraphQLClient(endpoint, {\n    headers: {\n      Authorization: 'bearer ' + process.env.REACT_APP_GITHUB_AUTH,\n    },\n  });\n  const query = gql`\n    {\n      organization(login: \"Tunisian-GitHub-Community\") {\n        memberStatuses(first: 20) {\n          edges {\n            node {\n              emoji\n              user {\n                bio\n                name\n                url\n                avatarUrl\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n  const data = await graphQLClient.request(query);\n  console.log(data.organization.memberStatuses.edges);\n  return data.organization.memberStatuses.edges;\n};\n\nconst useFetchRepos = () => {\n  return useQuery('fetchMembers', fetchMembers, {\n    staleTime: 60 * 10000, // refresh 5 minutes\n  });\n};\n\nexport default useFetchRepos;\n// refrence : https://github.com/webmasterdevlin/react-query-course/tree/master/src/features/anti-heroes/hooks\n","import React from 'react';\nimport HowToJoin from '../components/HowToJoin';\nimport Team from '../components/Members';\n\nimport guideLines from './data/GuideLines.data';\n\nimport useFetchMembers from '../hooks/organization/useFetchMembers';\n\nexport const MembersPage = () => {\n  const { isLoading, error, data } = useFetchMembers();\n  // not passing data to components, it's fetching public members only\n  return (\n    <div data-test=\"TeamPage\" className=\"teampage \">\n      <Team members={data} isLoading={isLoading} error={error} />\n      <HowToJoin guideLines={guideLines} />\n    </div>\n  );\n};\n\nexport default MembersPage;\n"],"names":["title","subtitles","className","map","subtitle","i","length","guideLines","data","Members","members","isLoading","error","console","log","Spinner","target","href","rel","member","alt","src","node","user","avatarUrl","name","bio","slice","url","React","fetchMembers","graphQLClient","GraphQLClient","headers","Authorization","query","gql","request","organization","memberStatuses","edges","useQuery","staleTime","MembersPage","useFetchMembers"],"sourceRoot":""}