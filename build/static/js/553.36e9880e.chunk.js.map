{"version":3,"file":"static/js/553.36e9880e.chunk.js","mappings":"4OAIaA,EAAW,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,UAAuB,EAAZC,MAC3C,OAAID,GAEA,gBAAKE,UAAU,WAAf,UACE,SAACC,EAAA,EAAD,OAIJ,gBAAK,YAAU,WAAf,UACE,oBAASD,UAAU,0BAAnB,UACE,iBAAKA,UAAU,+BAAf,WACE,iBAAKA,UAAU,yCAAf,WACE,eAAIA,UAAU,iEAAd,2BAGA,cAAGA,UAAU,kDAAb,oDAIF,gBAAKA,UAAU,wCAAf,UACE,mBAAOA,UAAU,wFAAjB,WACE,4BACE,gBAAIA,UAAU,yBAAd,WACE,eAAIA,UAAU,0GAAd,mBAGA,eAAIA,UAAU,qFAAd,0BAGA,eAAIA,UAAU,4FAGlB,2BACGH,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACT,gBACE,YAAU,OAEVJ,UAAU,0BAHZ,WAKE,eAAIA,UAAU,YAAd,SAA2BG,EAAKE,KAAKC,QACrC,eAAIN,UAAU,YAAd,SAA2BG,EAAKE,KAAKE,eACrC,eAAIP,UAAU,mBAAd,UACE,cACEQ,KAAML,EAAKE,KAAKI,IAChBC,OAAO,SACPC,IAAI,aACJX,UAAU,iHAJZ,wBANGI,cAoBf,gBAAKJ,UAAU,yCAAf,UACE,eACEA,UAAU,gFACVQ,KAAK,+CACLE,OAAO,SACPC,IAAI,aAJN,uBAOE,gBACEC,KAAK,OACLC,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbhB,UAAU,eACViB,QAAQ,YAPV,UASE,iBAAMC,EAAE,yCAcxB,EAAeC,EAAAA,KAAWvB,G,gECxFpBwB,EAAU,mCAAG,8FACA,iCACXC,EAAgB,IAAIC,EAAAA,cADT,iCACiC,CAChDC,QAAS,CACPC,cAAe,qDAGbC,GAAQC,EAAAA,EAAAA,KAPG,qTAsBEL,EAAcM,QAAQF,GAtBxB,cAsBXG,EAtBW,OAuBjBC,QAAQC,IAAIF,EAAKG,aAAaC,aAAaC,OAvB1B,kBAwBVL,EAAKG,aAAaC,aAAaC,OAxBrB,2CAAH,qDAiChB,EANsB,WACpB,OAAOC,EAAAA,EAAAA,UAAS,aAAcd,EAAY,CACxCe,UAAW,OC5BFC,EAAe,WAC1B,MAAmCC,IAA3BvC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAO6B,EAA1B,EAA0BA,KAC1B,OACE,gBAAK,YAAU,eAAf,UACE,SAAC,EAAD,CAAU/B,MAAO+B,EAAM9B,UAAWA,EAAWC,MAAOA,OAK1D","sources":["app/components/Projects.tsx","app/hooks/organization/useFetchRepos.ts","app/pages/ProjectsPage.tsx"],"sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from './Spinner';\nexport const Projects = ({ repos, isLoading, error }) => {\n  if (isLoading)\n    return (\n      <div className=\"h-screen\">\n        <Spinner />\n      </div>\n    );\n  return (\n    <div data-test=\"Projects\">\n      <section className=\"text-gray-200 body-font\">\n        <div className=\"container px-5 py-24 mx-auto\">\n          <div className=\"flex flex-col text-center w-full mb-20\">\n            <h1 className=\"sm:text-4xl text-3xl font-medium title-font mb-2 text-gray-200\">\n              Our Projects\n            </h1>\n            <p className=\"lg:w-2/3 mx-auto leading-relaxed text-base pt-6\">\n              Contributed by community members..\n            </p>\n          </div>\n          <div className=\"lg:w-2/3 w-full mx-auto overflow-auto\">\n            <table className=\"table-auto border-collapse border border-gray-800 w-full text-left whitespace-no-wrap\">\n              <thead>\n                <tr className=\"border border-gray-800\">\n                  <th className=\"px-4 py-3 title-font tracking-wider font-medium text-gray-200 text-sm bg-gray-800 rounded-tl rounded-bl\">\n                    Name\n                  </th>\n                  <th className=\"px-4 py-3 title-font tracking-wider font-medium text-gray-200 text-sm  bg-gray-800\">\n                    Description\n                  </th>\n                  <th className=\"px-4 py-3 title-font tracking-wider font-medium text-gray-200 text-sm bg-gray-800\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {repos.map((repo, i) => (\n                  <tr\n                    data-test=\"repo\"\n                    key={i}\n                    className=\" border border-gray-800\"\n                  >\n                    <td className=\"px-4 py-3\">{repo.node.name}</td>\n                    <td className=\"px-4 py-3\">{repo.node.description}</td>\n                    <td className=\"w-10 text-center\">\n                      <a\n                        href={repo.node.url}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        className=\"flex text-green-500  border border-green-500 mx-2 py-1 my-1 px-3  hover:bg-green-500 hover:text-white  rounded\"\n                      >\n                        Github\n                      </a>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <div className=\"flex pl-4 mt-4 lg:w-2/3 w-full mx-auto\">\n            <a\n              className=\"text-indigo-500 inline-flex items-center hover:text-green-500 md:mb-2 lg:mb-0\"\n              href=\"https://github.com/Tunisian-GitHub-Community\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              View more\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                className=\"w-4 h-4 ml-2\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M5 12h14M12 5l7 7-7 7\" />\n              </svg>\n            </a>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\nProjects.propTypes = {\n  repos: PropTypes.instanceOf(Array).isRequired,\n  isLoading: PropTypes.bool,\n};\n\nexport default React.memo(Projects);\n","import { useQuery } from 'react-query';\nimport { gql, GraphQLClient } from 'graphql-request';\n\nconst fetchRepos = async () => {\n  const endpoint = 'https://api.github.com/graphql';\n  const graphQLClient = new GraphQLClient(endpoint, {\n    headers: {\n      Authorization: 'bearer ' + process.env.REACT_APP_GITHUB_AUTH,\n    },\n  });\n  const query = gql`\n    {\n      organization(login: \"Tunisian-GitHub-Community\") {\n        repositories(isFork: true, first: 10) {\n          edges {\n            node {\n              name\n              description\n              url\n            }\n          }\n        }\n      }\n    }\n  `;\n  const data = await graphQLClient.request(query);\n  console.log(data.organization.repositories.edges);\n  return data.organization.repositories.edges;\n};\n\nconst useFetchRepos = () => {\n  return useQuery('fetchRepos', fetchRepos, {\n    staleTime: 60 * 5000, // refresh 5 minutes\n  });\n};\n\nexport default useFetchRepos;\n// refrence : https://github.com/webmasterdevlin/react-query-course/tree/master/src/features/anti-heroes/hooks\n","import React from 'react';\nimport Projects from '../components/Projects';\nimport useFetchRepos from '../hooks/organization/useFetchRepos';\n\nexport const ProjectsPage = () => {\n  const { isLoading, error, data } = useFetchRepos();\n  return (\n    <div data-test=\"ProjectsPage\">\n      <Projects repos={data} isLoading={isLoading} error={error} />\n    </div>\n  );\n};\n\nexport default ProjectsPage;\n"],"names":["Projects","repos","isLoading","error","className","Spinner","map","repo","i","node","name","description","href","url","target","rel","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","React","fetchRepos","graphQLClient","GraphQLClient","headers","Authorization","query","gql","request","data","console","log","organization","repositories","edges","useQuery","staleTime","ProjectsPage","useFetchRepos"],"sourceRoot":""}