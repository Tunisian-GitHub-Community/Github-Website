// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> should render and match the snapshot 1`] = `
<BrowserRouter>
  <React.Suspense
    data-test="App"
    fallback={<Spinner />}
  >
    <BrowserRouter>
      <Memo(Navbar) />
      <ErrorBoundry>
        <Switch>
          <Route
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              }
            }
            exact={true}
            path="/"
          />
          <Route
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              }
            }
            exact={true}
            path="/members"
          />
          <Route
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              }
            }
            exact={true}
            path="/projects"
          />
          <Route
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              }
            }
            exact={true}
            path="/timeline"
          />
          <Route
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              }
            }
            exact={true}
            path="/contactus"
          />
          <Route
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              }
            }
            exact={true}
            path="/questions"
          />
          <Route
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              }
            }
            exact={true}
            path="/challenge"
          />
          <Route
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              }
            }
            exact={true}
            path="/currentform"
          />
          <Route
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              }
            }
            exact={true}
            path="/login"
          />
          <Route
            component={
              Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              }
            }
            path="*"
          />
        </Switch>
      </ErrorBoundry>
      <IconToOrg />
      <Footer />
    </BrowserRouter>
  </React.Suspense>
</BrowserRouter>
`;
